worker_processes 1;

events { worker_connections 1024; }

http {

    include    /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log   /var/log/nginx/access.log;
    sendfile on;

    gzip             on;
    gzip_comp_level  2;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain application/x-javascript text/xml text/css application/xml;

  server {
    listen 80;

      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;

    location /api  {
      client_max_body_size 1G;
    # use dockers dns resolver
    # with this nginx can start even when the other containers are not running
      resolver 127.0.0.11 valid=30s;
      set $upstream_rest FileFighterREST;
      proxy_pass         http://$upstream_rest:8080$uri;
      proxy_redirect     off;
    }
    location /data  {
      client_max_body_size 30G;
      resolver 127.0.0.11 valid=30s;
      set $upstream_Filehandler FileFighterFileHandler;
      proxy_pass         http://$upstream_Filehandler:5000$uri;
      proxy_redirect     off;
    }

    location / {
      root               /var/www;
      try_files $uri $uri/ /index.html;
    }
  }
}
