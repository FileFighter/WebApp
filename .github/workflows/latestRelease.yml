name: Latest Release

on:
  workflow_dispatch:
  push:
    branches: "master"
    paths:
      - 'webapp_frontend/**'
      - 'webapp_provider/**'

jobs:
  Build_Docker_Image_on_Push:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Project
        uses: actions/checkout@v1
      -
        name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11.0.8'
          architecture: x64
      -
        name: Set up Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12
      -
        name: Checkout frontend
        run: |
          cd webapp_frontend
          npm i
      -
        name: Update Sonar
        run: |
          cd webapp_frontend
          echo "${{ secrets.SSL_CERT }}" > filefighter.de_ssl_certificate.cer
          yes yes | keytool -import -alias filefighterde -file filefighter.de_ssl_certificate.cer  -storetype JKS -keystore $JAVA_HOME/lib/security/cacerts  -storepass changeit
          export SONAR_SCANNER_OPTS="-Djavax.net.ssl.trustStore=/opt/hostedtoolcache/jdk/11.0.8/x64/lib/security/cacerts  -Djavax.net.ssl.keyStore=/opt/hostedtoolcache/jdk/11.0.8/x64/lib/security/cacerts"
          npm run-script sonar
          rm filefighter.de_ssl_certificate.cer
          keytool -delete -alias filefighterde -keystore $JAVA_HOME/lib/security/cacerts  -storepass changeit
        env:
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          SONAR_PASSWORD: ${{ secrets.SONAR_PASSWORD }}
      -
        name: Build Frontend
        run: |
          cd webapp_frontend
          npm run-script build
          cp -r build ../webapp_provider/public
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PW }}
      -
        name: Build and push
        run: |
          docker build -t filefighter/frontend:latest webapp_provider/
          docker push filefighter/frontend:latest
