// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Error404 default 1`] = `
<div
  className="container"
>
  <p
    className="text-center"
  >
    <a
      href="/"
      onClick={[Function]}
    >
      Go to Home 
    </a>
  </p>
</div>
`;

exports[`Storyshots Example/Button Large 1`] = `
<button
  className="storybook-button storybook-button--large storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Primary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--primary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Secondary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Small 1`] = `
<button
  className="storybook-button storybook-button--small storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Header Logged In 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log out
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Header Logged Out 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log in
      </button>
      <button
        className="storybook-button storybook-button--small storybook-button--primary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Sign up
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Page Logged In 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log out
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Page Logged Out 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log in
        </button>
        <button
          className="storybook-button storybook-button--small storybook-button--primary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Filesystem default 1`] = `
<div
  className="d-flex flex-column align-content-between justify-content-between h-100"
>
  <div>
    <div
      className="py-1 border d-flex justify-content-between container-fluid"
    >
      <span />
      <span>
        <button
          className="fade btn btn-primary"
          disabled={false}
          type="button"
        >
          Rename
        </button>
        <span
          className="fade"
        >
          <button
            className="btn btn-primary"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Delete
          </button>
          <button
            className="btn btn-primary"
            disabled={false}
            type="button"
          >
            Download
          </button>
        </span>
        <button
          className="btn btn-primary"
          disabled={false}
          type="button"
        >
          New Folder
        </button>
      </span>
    </div>
    <div
      className="container-fluid"
    >
      <nav
        aria-label="breadcrumb"
      >
        <ol
          className="breadcrumb"
        >
          <a
            className="breadcrumb-item active"
            href="/file"
            onClick={[Function]}
          >
            Home
          </a>
        </ol>
      </nav>
      <div
        className="row"
      >
        <div
          className="col-md-1 col-2"
        >
          <div
            className="form-group"
          >
            <div
              className="form-check"
            >
              <input
                checked={true}
                className="form-check-input position-static"
                disabled={false}
                id="formBasicCheckbox"
                onChange={[Function]}
                type="checkbox"
              />
            </div>
          </div>
        </div>
        <div
          className="text-center col-md-1 col-2"
          onClick={[Function]}
        >
          Type
        </div>
        <div
          className="col-md-1 col-2"
        >
          Share
        </div>
        <div
          className="col-md-4 col-6"
          onClick={[Function]}
        >
          Name
        </div>
        <div
          className="col-md-3 col-6"
          onClick={[Function]}
        >
          Owner
        </div>
        <div
          className="col-md-1 col-3"
          onClick={[Function]}
        >
          Last changes
        </div>
        <div
          className="col-md-1 col-3"
          onClick={[Function]}
        >
          Size
        </div>
      </div>
      <hr />
      <div
        className="row"
      >
        <div
          className="text-center col"
        >
           Nothing to see here.
        </div>
      </div>
    </div>
    <div />
    <button
      className="btn btn-primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Download test
    </button>
  </div>
  <div
    className="text-center border py-4 mx-3"
    onBlur={[Function]}
    onClick={[Function]}
    onDragEnter={[Function]}
    onDragLeave={[Function]}
    onDragOver={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    tabIndex={0}
  >
    <input
      autoComplete="off"
      multiple={true}
      onChange={[Function]}
      onClick={[Function]}
      style={
        Object {
          "display": "none",
        }
      }
      tabIndex={-1}
      type="file"
    />
    <p>
      Drag 'n' drop files or folders here, or click to select files
    </p>
  </div>
</div>
`;

exports[`Storyshots Health default 1`] = `
<div
  className="container"
>
  <h1>
    FileFighter
  </h1>
  <img
    alt="Logo FileFighter"
    onClick={[Function]}
    src="logo.png"
  />
  <div
    className="d-flex justify-content-center align-items-center h-100 container"
  >
    <div
      className="spinner-border"
      role="status"
    >
      <span
        className="sr-only"
      >
        Loading...
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Registration default 1`] = `
<div
  className="h-100 container"
  id="registrationContainer"
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="row"
  >
    <div
      className="col-md-6 offset-md-3"
    >
      <h1>
        Create new account
      </h1>
      <form
        className=""
        onSubmit={[Function]}
      >
        <div
          className="form-group"
        >
          <label
            className="form-label"
            htmlFor="formBasicUsername"
          >
            Username
          </label>
          <input
            className="form-control"
            id="formBasicUsername"
            onChange={[Function]}
            type="name"
            value=""
          />
        </div>
        <div
          className="form-group"
        >
          <label
            className="form-label"
            htmlFor="formBasicPassword"
          >
            Password
          </label>
          <input
            className="form-control"
            id="formBasicPassword"
            onChange={[Function]}
            placeholder="Must contain one number, uppercase & lowercase letter each"
            type="password"
            value=""
          />
          <div>
            <img
              alt="status icon password length"
              src="info-24px.svg"
            />
            <span
              className="sr-only"
            >
              Missing: 
            </span>
            <span
              className="text-muted"
            >
              Passwords must be between 8 and 20 characters.
            </span>
          </div>
          <div>
            <img
              alt="status icon password contains uppercase character"
              src="info-24px.svg"
            />
            <span
              className="sr-only"
            >
              Missing: 
            </span>
            <span
              className="text-muted"
            >
              Passwords must be at least contain 1 uppercase character.
            </span>
          </div>
          <div>
            <img
              alt="status icon password contains lowercase character"
              src="info-24px.svg"
            />
            <span
              className="sr-only"
            >
              Missing: 
            </span>
            <span
              className="text-muted"
            >
              Passwords must be at least contain 1 lowercase character.
            </span>
          </div>
          <div>
            <img
              alt="status icon password contains number"
              src="info-24px.svg"
            />
            <span
              className="sr-only"
            >
              Missing: 
            </span>
            <span
              className="text-muted"
            >
              Passwords must be at least contain 1 number.
            </span>
          </div>
        </div>
        <div
          className="form-group"
        >
          <label
            className="form-label"
            htmlFor="formConfirmPassword"
          >
            Re-enter password
          </label>
          <input
            className="form-control"
            id="formConfirmPassword"
            onChange={[Function]}
            type="password"
            value=""
          />
          <div>
            <img
              alt="status icon passwords match"
              src="info-24px.svg"
            />
            <span
              className="sr-only"
            >
              Done: 
            </span>
            <span
              className="text-muted"
            >
              Passwords must match.
            </span>
          </div>
        </div>
        <button
          className="btn btn-primary"
          disabled={false}
          type="submit"
        >
          Submit
        </button>
      </form>
    </div>
  </div>
  <img
    alt="logo"
    className="invisible m0 position-relative"
    id="logoSubmit"
    src="adventurer-run.gif"
  />
</div>
`;
